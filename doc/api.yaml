openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: Health checked, hello world returned.
  /user:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: The record has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Body is incorrect.
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        '200':
          description: All founded.
  /user/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Get successfully proceed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: UUID is incorrect.
        '404':
          description: User not found.
    put:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: User password updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: UUID is incorrect.
        '404':
          description: User not found.
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: User deleted.
        '400':
          description: UUID is incorrect.
        '404':
          description: User not found.
  /track:
    post:
      operationId: TracksController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: Track created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Body is incorrect.
    get:
      operationId: TracksController_findAll
      parameters: []
      responses:
        '200':
          description: All founded.
  /track/{id}:
    get:
      operationId: TracksController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Track found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: UUID is incorrect.
        '404':
          description: Track not found.
    put:
      operationId: TracksController_replace
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceTrackDto'
      responses:
        '200':
          description: Track changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: UUID is incorrect.
        '404':
          description: Track not found.
    delete:
      operationId: TracksController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Track deleted.
        '400':
          description: UUID is incorrect.
        '404':
          description: Track not found.
  /artist:
    post:
      operationId: ArtistsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: Created artist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Body is incorrect.
    get:
      operationId: ArtistsController_findAll
      parameters: []
      responses:
        '200':
          description: All founded.
  /artist/{id}:
    get:
      operationId: ArtistsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Artist found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: UUID is incorrect.
        '404':
          description: Artist not found.
    put:
      operationId: ArtistsController_replace
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceArtistDto'
      responses:
        '200':
          description: Artist changed.
        '400':
          description: UUID is incorrect.
        '404':
          description: Artist not found.
    delete:
      operationId: ArtistsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Artist deleted.
        '400':
          description: UUID is incorrect.
        '404':
          description: Artist not found.
  /album:
    post:
      operationId: AlbumsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: Created album.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Body is incorrect.
    get:
      operationId: AlbumsController_findAll
      parameters: []
      responses:
        '200':
          description: All founded.
  /album/{id}:
    get:
      operationId: AlbumsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Album found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: UUID is incorrect.
        '404':
          description: Album not found.
    put:
      operationId: AlbumsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceAlbumDto'
      responses:
        '200':
          description: Album changed.
        '400':
          description: UUID is incorrect.
        '404':
          description: Album not found.
    delete:
      operationId: AlbumsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Album deleted.
        '400':
          description: UUID is incorrect.
        '404':
          description: Album not found.
  /favs:
    get:
      operationId: FavoritesController_findAll
      parameters: []
      responses:
        '200':
          description: All founded.
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Added fav track.
        '400':
          description: UUID is incorrect.
        '404':
          description: Track not found.
        '422':
          description: Track already in favs.
    delete:
      operationId: FavoritesController_removeTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Track removed from favs.
        '400':
          description: UUID is incorrect.
        '404':
          description: Track not found.
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Added fav album.
        '400':
          description: UUID is incorrect.
        '404':
          description: Album not found.
        '422':
          description: Album already in favs.
    delete:
      operationId: FavoritesController_removeAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Album removed from favs.
        '400':
          description: UUID is incorrect.
        '404':
          description: Album not found.
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Added fav artist.
        '400':
          description: UUID is incorrect.
        '404':
          description: Artist not found.
        '422':
          description: Artist already in favs.
    delete:
      operationId: FavoritesController_removeArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Artist removed from favs.
        '400':
          description: UUID is incorrect.
        '404':
          description: Artist not found.
info:
  title: Home Library Service
  description: Home Library Service for RS-School
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    UserResponse:
      type: object
      properties:
        id:
          type: string
        login:
          type: string
        version:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          example: '"Its my life"'
        artistId:
          type: string
        duration:
          type: integer
          example: 243
      required:
        - name
        - artistId
        - duration
    Track:
      type: object
      properties:
        id:
          type: string
          example: '"fc638392-c772-46f4-ab7c-c33abe03d718"'
        name:
          type: string
          example: '"Final Countdown"'
        artistId:
          type: string
          example: '"fba5d40d-f56d-4999-aa13-2fe683f87547"'
        albumId:
          type: string
          example: '"ab636281-9f4b-4beb-b473-ada356601f75"'
        duration:
          type: string
          example: 131
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    ReplaceTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
        albumId:
          type: string
        duration:
          type: integer
      required:
        - name
        - artistId
        - albumId
        - duration
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    Artist:
      type: object
      properties:
        id:
          type: string
          example: '"fc638392-c772-46f4-ab7c-c33abe03d718"'
        name:
          type: string
          example: '"Captain Jack"'
        grammy:
          type: boolean
          example: 'true'
      required:
        - id
        - name
        - grammy
    ReplaceArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: integer
        artistId:
          type: string
      required:
        - name
        - year
        - artistId
    Album:
      type: object
      properties:
        id:
          type: string
          example: '"fc638392-c772-46f4-ab7c-c33abe03d718"'
        name:
          type: string
          example: '"Moscow Calling!"'
        year:
          type: integer
          example: 1991
        artistId:
          type: string
          example: '"ab636281-9f4b-4beb-b473-ada356601f75"'
      required:
        - id
        - name
        - year
        - artistId
    ReplaceAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: integer
        artistId:
          type: string
      required:
        - name
        - year
        - artistId
